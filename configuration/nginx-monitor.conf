
user  nginx;
# equals CPU core number
worker_processes  auto;
# worker process auto bind CPU core
worker_cpu_affinity auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream myapp {
        # least_conn, ip_hash, round_robin (default)
        least_conn;
        server localhost:8080;
        server localhost:8081;
        server localhost:8082;
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/log/host.access.log  main;

        location / {
            proxy_pass http://myapp;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }

    #
    # nginx monitor status configuration
    #
    server {
        listen 9999;
        #listen *:9999;
        #listen 192.168.187.128:9999;

        location /nginx_status {
            # nginx version < 1.7.5
            #stub_status on;
            # nginx version >= 1.7.5
            stub_status;
            access_log  off;
            # 可以配置多个allow语句（deny all才起作用）
            #allow 192.168.187.1;
            #allow 192.168.187.0/24;
            # 如果只允许allow语句配置的目标地址才能访问
            #deny  all;
        }
    }

}